#!/usr/bin/env bash
# Usage: compile BUILD_DIR CACHE_DIR ENV_DIR

function log-step   (){ echo "-----> $@"; }
function log-info   (){ echo "       $@"; }
function log-indent (){ sed -u 's/^/       /'; }

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

BIN_DIR=$(dirname $(realpath -s $0))

TEMP_DIR=$(mktemp -d)

export TEXLIVE_INSTALL_PREFIX=$BUILD_DIR/texlive
TEXLIVE_PROFILE_PATH=$BIN_DIR/texlive.profile
TEXLIVE_PACKAGES_PATH=$BIN_DIR/texlive.packages

log-step "Restore cache"
mkdir -p $CACHE_DIR
CACHE_KEY=texlive
[[ -d "$CACHE_DIR/$CACHE_KEY"]] && CACHE_HIT=1
if [ $CACHE_HIT ]; then
    {
        echo "Found hit: restoring cache."
        cp -r "$CACHE_DIR/$CACHE_KEY" "$BUILD_DIR/texlive"
    } | log-indent
else
    log-info "No hit found."
fi

if [ ! $CACHE_HIT ]; then
    log-step "Install TeX Live distribution"
    {
        ## Check into temporary folder
        cd $TEMP_DIR
        ## Download installer
        wget --quiet http://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz
        ## Unpack installer
        tar -xzf install-tl-unx.tar.gz
        ## Check into unpacked installer folder
        cd install-tl-20*
        ## Run installer with given profile
        ./install-tl --portable --profile="$TEXLIVE_PROFILE_PATH"
    } | log-indent
fi

if true; then
    log-step "Update system paths"
    {
        ## Get tlmgr path
        TLMGR_PATH=$(ls "$TEXLIVE_INSTALL_PREFIX"/bin/*/tlmgr)
        ## Get platform of installed distribution
        PLATFORM=$($TLMGR_PATH -print-platform)
        ## Build binaries path
        BINARIES_PATH="$TEXLIVE_INSTALL_PREFIX/bin/$PLATFORM"
        ## Append binaries path to system paths
        mkdir -p $BUILD_DIR/.profile.d
        echo "export PATH=$BINARIES_PATH:\$PATH" > $BUILD_DIR/.profile.d/texlive.sh
    } | log-indent
    source $BUILD_DIR/.profile.d/texlive.sh
fi

if [ ! $CACHE_HIT ]; then
    log-step "Install TeX Live packages"
    {
        ## Read nonempty lines from packages file into an array
        while IFS=\= read pkg; do TEXLIVE_PACKAGES+=($pkg); done < <(grep --invert-match '^(\s*#.*)?$' "$TEXLIVE_PACKAGES_PATH")
        ## Use tlmgr to install the packages
        tlmgr install "${TEXLIVE_PACKAGES[@]}"
    } | log-indent
fi

if [ $CACHE_HIT ]; then
    log-step "Update TeX Live distribution"
    {
        ## Update tlmgr
        tlmgr update --self
        ## Update everything else
        tlmgr update --all
    } | log-indent
fi

log-step "Store cache"
{
    rm -rf "$CACHE_DIR/$CACHE_KEY"
    cp -r "$BUILD_DIR/texlive" "$CACHE_DIR/$CACHE_KEY"
} | log-indent
